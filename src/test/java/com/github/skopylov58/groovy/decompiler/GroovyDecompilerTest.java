/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.github.skopylov58.groovy.decompiler;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;
import org.junit.Test;
import com.github.javaparser.StaticJavaParser;
import com.github.javaparser.ast.stmt.BlockStmt;
import com.github.skopylov58.groovy.decompiler.GroovyDecompiler;
import com.github.skopylov58.groovy.decompiler.GroovyVisitor;

import java.util.Arrays;

public class GroovyDecompilerTest {

  
  String callSite ="""
  private static void $createCallSiteArray_1(java.lang.String[]);
    Code:
       0: aload_0
       1: ldc           #69                 // int 0
       3: ldc_w         #623                // String attach
       6: aastore
       7: aload_0
       8: ldc           #70                 // int 1
      10: ldc_w         #625                // String get
      13: aastore
      14: aload_0
      15: ldc           #71                 // int 2
      17: ldc_w         #627                // String storageFacet
      20: aastore
      21: aload_0
      22: ldc           #84                 // int 3
      24: ldc_w         #623                // String attach
          
          """;
  
  @Test
  public void testCallSite() throws Exception {
    
    
    String[] site = GroovyDecompiler.loadCallSite(callSite.lines());
    
    assertEquals(4, site.length);
    assertEquals("attach", site[0]);
    assertEquals("get", site[1]);
    assertEquals("storageFacet", site[2]);
    assertEquals("attach", site[3]);
  }

  @Test
  public void testWrongSite() throws Exception {

    String callSite ="""
    dspofs;lvk
    scvklks
    ds;olk
    """;
    String[] site = GroovyDecompiler.loadCallSite(callSite.lines());
    System.out.println(Arrays.toString(site));
    assertTrue(site.length == 0);
  }

  @Test
  public void testDecompile() throws Exception {
    String code = """
      {
  CallSite[] var2 = $getCallSiteArray();
  var2[0].call(repository, var2[1].call(var2[2].callGroovyObjectGetProperty(this)));
      }
  """;

    BlockStmt block = StaticJavaParser.parseBlock(code);

/*
    DotPrinter printer = new DotPrinter(true);
     printer.output(block);
    YamlPrinter yamlPrinter = new YamlPrinter(true);
    System.out.println(yamlPrinter.output(block));
*/

      GroovyVisitor gv = new GroovyVisitor(GroovyDecompiler.loadCallSite(callSite.lines()));
    block.accept(gv, Integer.valueOf(0));
    
    String decompiled = block.toString();
    assertTrue(decompiled.contains("repository.attach(storageFacet.get())"));
    
    System.out.println(decompiled);

  }

}


